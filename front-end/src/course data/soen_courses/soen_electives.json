[
    {
        "id": "AERO 480",
        "title": "AERO 480 Flight Control Systems",
        "credits": 3.5,
        "prerequisites": "AERO 371 or ELEC 372 or MECH 371 or SOEN 385.",
        "corequisites": "",
        "description": "Basic flight control and flight dynamics principles. Aircraft dynamic equations and performance data. Implementation of aircraft control: control surfaces and their operations, development of thrust and its control; autopilot systems, their algorithms, dynamics and interaction problems. Flight instruments, principles of operation and dynamics. Cockpit layouts — basic configuration, ergonomic design, control field forces; advanced concepts in instruments, avionics and displays; HUD; flight management systems, and communication equipment. Introduction to flight simulation: overview of visual, audio and motion simulator systems; advanced concepts in flight simulators.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week, alternate weeks",
        "notes": "This course is equivalent to ELEC 415 and to MECH 480. Students who have received credit for ELEC 415 or MECH 480 may not take this course for credit."
    },
    {
        "id": "AERO 482",
        "title": "AERO 482 Avionic Navigation Systems",
        "credits": 3,
        "prerequisites": " ENGR 371 or COMP 233; AERO 371 or ELEC 372 or MECH 370 or SOEN 385",
        "corequisites": "",
        "description": "Basics of modern electronic navigation systems, history of air navigation, earth coordinate and mapping systems; basic theory and analysis of modern electronic navigation instrumentation, communication and radar systems, approach aids, airborne systems, transmitters and antenna coverage; noise and losses, target detection, digital processing, display systems and technology; demonstration of avionic systems using flight simulator.",
        "components": "Lecture 3 hours per week",
        "notes": "This course is equivalent to ELEC 416 and to MECH 482. Students who have received credit for ELEC 416 or MECH 482 may not take this course for credit."
    },
    {
        "id": "COEN 320",
        "title": "COEN 320 Introduction to Real‑Time Systems",
        "credits": 3,
        "prerequisites": "COEN 346 or COMP 346",
        "corequisites": "",
        "description": "Fundamentals of real‑time systems: definitions, requirements, design issues and applica‑ tions. Real‑time operating systems (RTOS) feature: multi‑tasking, process management, scheduling, interprocess communication and synchronization, real‑time memory management, clocks and timers, interrupt and exception handling, message queues, asynchronous input/output. Concurrent programming languages: design issues and examples, POSIX threads and semaphores. Introduction to real‑time uniprocessor scheduling policies: static vs. dynamic, pre‑emptive vs. non‑pre‑emptive, specific techniques — rate‑monotonic algorithm, earliest‑deadline‑first, deadline monotonic, least‑laxity‑time‑first; clock‑driven scheduling. Design and specification techniques — Finite state machine based State‑chart, Dataflow diagram, Petri nets. Reliability and fault‑tolerance. Case studies of RTOS — QNX, VxWorks, and research prototypes.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "COMP 333",
        "title": "COMP 333 Data Analytics",
        "credits": 4,
        "prerequisites": "COMP 233 or ENGR 371 ; COMP 352 ; ENCS 282 ",
        "corequisites": "",
        "description": "This course introduces the process of data analytics with the aid of examples from several disciplines. It covers data wrangling: extract-transform-load (ETL), cleaning, structuring, integration; data analytics activities: description, prescription, modelling, simulation, optimization, storytelling; and the Python ecosystem: language, libraries, and Jupyter environment.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 339",
        "title": "COMP 339 Combinatorics",
        "credits": 3,
        "prerequisites": "COMP 232 ; or students must complete have completed 18 credits in post‑Cegep Mathematics prior to enrolling",
        "corequisites": "",
        "description": "General principles of counting, permutations, combinations, identities, partitions, generating functions, Fibonacci numbers, Stirling numbers, Catalan numbers, principle of inclusion‑exclusion. Graphs, subgraphs, isomorphism, Euler graphs, Hamilton paths and cycles, planar graphs, Kuratowski’s Theorem, trees, colouring, 5‑colour theorem, matching, Hall’s theorem.",
        "components": "Lecture; Tutorial Notes: Students who have received credit for MATH 339 may not take this course for credit.",
        "notes": "Students who have received credit for MATH 339 may not take this course for credit."
    },
    {
        "id": "COMP 345",
        "title": "COMP 345 Advanced Program Design with C++",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "Introduction to C++. I/O with stream classes. Pointers and their uses. The Standard Template Library (STL): containers, algorithms, iterators, adaptors, function objects. Class design: constructors, destructors, operator overloading, inheritance, virtual functions, exception handling, memory management. Advanced topics: libraries, locales, STL conventions, concurrency, template metaprogramming. Applications of C++: systems, engineering, games programming. Project.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 371",
        "title": "COMP 371 Computer Graphics",
        "credits": 4,
        "prerequisites": "COMP 232 or COEN 231 ; COMP 352 or COEN 352 ",
        "corequisites": "",
        "description": "This course covers the following topics: introduction to computer graphics and graphics hardware; introduction to graphics API and graphics systems architecture; mathematics of 2D and 3D transformations and 2D and 3D viewing; colour and basic rendering algorithms; visual realism and visibility; illumination and shading and global illumination techniques and textures; introduction to curves and surfaces and 3D object modelling; introduction to computer animation. This course includes a project.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 376",
        "title": "COMP 376 Introduction to Game Development",
        "credits": 4,
        "prerequisites": "COMP 371 ",
        "corequisites": "",
        "description": "This course introduces students to design and implementation aspects of computer gaming, including topics such as game technologies , basic game design, programming , applied mathematics , storytelling and narratives, and game genres. The course covers virtual environments, 2D and 3D game engines, and game development tools. Furthermore , students learn about character development, gameplay strategies, level design in games, and user interfaces. Other topics covered in the course include architecture of game consoles, analog and digital controllers, and the incorporation of graphics, sound, and music in game implementations. During the course, the students develop 2D and 3D games. A project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week Notes: Students who have received credit for CART 315 may not take this course for credit.",
        "notes": "Students who have received credit forCART 315may not take this course for credit."
    },
    {
        "id": "COMP 425",
        "title": "COMP 425 Computer Vision",
        "credits": 4,
        "prerequisites": "",
        "corequisites": "",
        "description": "This course introduces basic techniques and concepts in computer vision including image formation, grouping and fitting, geometric vision, recognition, perceptual organization, and the state-of-the-art software tools. Students learn fundamental algorithms and techniques, and gain experience in programming vision-based components. A project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 426",
        "title": "COMP 426 Multicore Programming",
        "credits": 4,
        "prerequisites": "COMP 346 or COEN 346 ",
        "corequisites": "",
        "description": "Fundamental concepts of computer architecture. Architecture of the selected multicore platform. Review of shared‑memory parallel programming. The difficulties inherent to parallel programming. Scalability of programming models. The stream programming model for multicore. Implicit and explicit threading. Implicit and explicit orchestration of data movement, both on chip and off. Adapting standard algorithms to multicore. Critical assessment of the available system‑software support. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 428",
        "title": "COMP 428 Parallel Programming",
        "credits": 4,
        "prerequisites": "COMP 346 or COEN 346 ",
        "corequisites": "",
        "description": "Parallel programming techniques as a natural extension to sequential programming. Overview of parallel programming architectures and models. Parallel programming issues: locality, granularity, scheduling, data decomposition and distribution, load balancing, communication and synchronization, determinacy and non‑determinacy, cost and performance. Techniques and tools for message‑passing parallel programming. Case studies. Project.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 432",
        "title": "COMP 432 Machine Learning",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "This course introduces conceptual and practical aspects of machine learning. Concepts include regression, classification, maximum likelihood estimation, discriminative vs. generative modelling, generalization, supervised learning, unsupervised learning, semi-supervised learning and transfer learning. Methods include linear models, mixture models, nearest neighbours, support vector machines, random forests, boosting, and basics of deep learning. A project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 433",
        "title": "COMP 433 Introduction to Deep Learning",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "This course introduces conceptual and practical aspects of deep learning and their implementation in software. Topics covered include commonly used deep learning model architectures, loss functions, regularization, optimization methods, and a strong emphasis is placed on review of their foundations and use of software tools such as pytorch, jax, and tensorflow to implement and/or apply these models. Applications in computer vision and natural language processing are covered. A final project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 438",
        "title": "COMP 438 Geometric Modelling and Processing",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "This course exposes students to the geometric modelling pipeline. It includes topics such as efficient mesh data structures such as half-edge and cornertable, digital differential geometry, spectral mesh processing, discrete modelling tools and analytic modelling tools (B-Splines, Bezier and subdivision surfaces), optimization-driven modelling and simulation, 3D shape acquisition, 3D printing and prototyping. Application-related topics are discussed such as smoothing, resampling, compression, as well as deep neural network architectures for geometric data and modelling problems. A project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 442",
        "title": "COMP 442 Compiler Design",
        "credits": 4,
        "prerequisites": "COMP 228 or SOEN 228 or COEN 311 ; COMP 335 ; COMP 352 or COEN 352 ",
        "corequisites": "",
        "description": "Compiler organization and implementation: lexical analysis and parsing, syntax‑directed translation, code optimization. Run‑time systems. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 444",
        "title": "COMP 444 System Software Design",
        "credits": 4,
        "prerequisites": "COMP 346 ",
        "corequisites": "",
        "description": "Detailed examination of the design, implementation and system call interface of a contemporary operating system: its kernel, file system, process and thread management including scheduling, file system design and implementation, memory management, device management, I/O management, interprocess communication and synchronization mechanisms, system call interface, interrupt handling, and other advanced issues. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 445",
        "title": "COMP 445 Data Communication and Computer Networks",
        "credits": 4,
        "prerequisites": "COMP 346 ",
        "corequisites": "",
        "description": "This course introduces the fundamentals of networking protocols and communication technologies. Topics covered include network architectures and service models, principles behind the design of protocol stacks, local and wide area networks, and the Internet. The course also covers a review of the foundations and performance of application layer protocols, reliable delivery mechanisms, congestion and flow control, control and data planes, routing and switching, error detection and correction, and multiple access protocols. The course includes an introduction to wireless networking and security.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 451",
        "title": "COMP 451 Database Design",
        "credits": 4,
        "prerequisites": "COMP 353 ",
        "corequisites": "",
        "description": "Storage management. Buffer management. Data organization. Index structures. Query optimization and execution. Transaction management. Recovery. Concurrency control. Database performance analysis and tuning. New trends in database technology. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 465",
        "title": "COMP 465 Design and Analysis of Algorithms",
        "credits": 3,
        "prerequisites": "COMP 232 or COEN 231 ; COMP 339 ; COMP 352 or COEN 352 ",
        "corequisites": "",
        "description": "Order statistics: worst‑case, average‑case and amortized analysis. Algorithm design techniques: greedy algorithms, dynamic programming. Selected algorithms from graph theory, linear programming, number theory, string matching, and computational geometry. A survey of hard problems, NP‑completeness, and approximation algorithms.",
        "components": "Lecture 3 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 472",
        "title": "COMP 472 Artificial Intelligence",
        "credits": 4,
        "prerequisites": "COMP 352 or COEN 352 ",
        "corequisites": "",
        "description": "This course initially describes the scope and history of Artificial Intelligence. Then it covers knowledge representation, heuristic search, game playing and planning. Finally, it introduces the topics of machine learning, genetic algorithms and natural language processing. A project is required.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 473",
        "title": "COMP 473 Pattern Recognition",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "Preprocessing. Feature extraction and selection. Similarity between patterns and distance measurements. Syntactic and statistical approaches. Clustering analysis. Bayesian decision theory and discriminant functions. Neural networks and machine learning. Applications. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 474",
        "title": "COMP 474 Intelligent Systems",
        "credits": 4,
        "prerequisites": "COMP 352 or COEN 352 ",
        "corequisites": "",
        "description": "Rule‑based expert systems, blackboard architecture, and agent‑based. Knowledge acquisition and representation. Uncertainty and conflict resolution. Reasoning and explanation. Design of intelligent systems. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 475",
        "title": "COMP 475 Immersive Technologies",
        "credits": 4,
        "prerequisites": "COMP 371 ",
        "corequisites": "",
        "description": "This course covers the fundamentals of immersive technologies, a brief history and overview of immersive technologies, analyzes case studies of interactive experiences using immersive technologies, and identifies the main challenges of the current state of the art. Furthermore, it covers the basic principles of 3D graphics for creating virtual assets and environments, and basic concepts and technologies for interaction. A project provides hands‑on experience in the design and development of interactive experiences with the user of immersive technologies.",
        "components": "Lecture 3 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 476",
        "title": "COMP 476 Advanced Game Development",
        "credits": 4,
        "prerequisites": "COMP 361 or ENGR 391 ; COMP 376 ",
        "corequisites": "",
        "description": "Introduction to advanced aspects of computer games. Game engine design. Artificial Intelligence (AI): non‑player character movement, coordinated  movement, pathfinding, world representations; decision making; tactical AI, strategic AI, learning in games. Physics‑based techniques: collision detection and response. Networked gaming: multi‑player games, networking and distributed game design, mobile gaming. Improving realism: cut scenes, 3D sound. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 477",
        "title": "COMP 477 Animation for Computer Games",
        "credits": 4,
        "prerequisites": "COMP 361 or ENGR 391 , COMP 371 ",
        "corequisites": "",
        "description": "Introduction to the algorithms, data structures, and techniques used in modelling and rendering dynamic scenes. Topics include principles of traditional animation, production pipeline, animation hardware and software, orientation representation and interpolation, modelling physical and articulated objects, forward and inverse kinematics, motion control and capture, key‑frame, procedural, and behavioural animation, camera animation, scripting system, and free‑form deformation. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 478",
        "title": "COMP 478 Image Processing",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "Digital image fundamentals, image transforms (Fourier, Walsh, Haar, Hotelling, wavelet), image enhancement (histogram processing, spatial filtering, high‑ and low‑pass filtering), image restoration, image compression (elements of information theory, image compression models, error‑free compression, lossy compression, image compression standards), image segmentation (line detection, Hough transform, edge detection and linking, thresholding, region splitting and merging), representation and description (chain codes, signatures, skeletons, shape descriptors, moments, texture). Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 479",
        "title": "COMP 479 Information Retrieval and Web Search",
        "credits": 4,
        "prerequisites": "COMP 233 or ENGR 371 ; COMP 352 ",
        "corequisites": "",
        "description": "Basics of information retrieval (IR): boolean, vector space and probabilistic models. Tokenization and creation of inverted files. Weighting schemes. Evaluation of IR systems: precision, recall, F‑measure. Relevance feedback and query expansion. Application of IR to web search engines: XML, link analysis, PageRank algorithm. Text categorization and clustering techniques as used in spam filtering. Project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 498",
        "title": "COMP 498 Topics in Computer Science",
        "credits": 3,
        "prerequisites": "",
        "corequisites": "",
        "description": "This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",
        "components": "Lecture 3 hours per week",
        "notes": ""
    },
    {
        "id": "COMP 499",
        "title": "COMP 499 Topics in Computer Science with Lab",
        "credits": 4,
        "prerequisites": "",
        "corequisites": "",
        "description": "The content may vary from offering to offering and will be chosen to complement the available elective courses.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 298",
        "title": "SOEN 298 System Hardware Lab",
        "credits": 1,
        "prerequisites": "",
        "corequisites": "",
        "description": "Digital design exercises including assembly and testing corresponding to the SOEN 228 lab.",
        "components": "Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 344",
        "title": "SOEN 344 Advanced Software Architecture and Design",
        "credits": 3,
        "prerequisites": "SOEN 343 ",
        "corequisites": "",
        "description": "This course covers the following topics: architectural activities, roles, and deliverables; architectural view models; architectural styles (including client‑server, layered, pipes‑and‑filters, event‑based, process control) and frameworks; architectural analysis and the interplay with requirements elicitation; notations for expressing architectural designs, structural and behavioural specifications; from architectural design to detailed design; domain specific architectures and design patterns; evaluation and performance estimation of designs; advanced object‑oriented design patterns and idioms.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "SOEN 387",
        "title": "SOEN 387 Web‑Based Enterprise Application Design",
        "credits": 3,
        "prerequisites": "COMP 353 or SOEN 363 ",
        "corequisites": "",
        "description": "This course introduces Hypertext Transfer Protocol (HTTP), and client/server and layered architectures for Web-based Enterprise Applications (WEA). The course covers Application, Presentation, Domain and Data Source design patterns. Students learn how to use Java servlets and Java Server Pages. The course also covers authentication, security and transaction processing, as well as system-level testing of web applications.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "SOEN 422",
        "title": "SOEN 422 Embedded Systems and Software",
        "credits": 4,
        "prerequisites": "COMP 346 ",
        "corequisites": "",
        "description": "This course covers the following topics: embedded computer system architectures; programming of interface and peripheral control registers; analog to digital conversion and motor control using pulse width modulation; interrupts, communication methods and their application to interface control and multi‑computer systems; architecture and operating systems of advanced embedded designs; design and testing of integrated systems; advanced topics.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week Notes: Students who have received credit for COEN 421 may not take this course for credit.",
        "notes": "Students who have received credit for COEN 421 may not take this course for credit."
    },
    {
        "id": "SOEN 423",
        "title": "SOEN 423 Distributed Systems",
        "credits": 4,
        "prerequisites": "COMP 346 ",
        "corequisites": "",
        "description": "This course covers the following topics: principles of distributed computing including scalability, transparency, concurrency, consistency, fault tolerance, high availability; client‑server interaction technologies including interprocess communication, sockets, group communication, remote procedure call, remote method invocation, object request broker, web services; server design techniques including process replication, fault tolerance through passive replication, high availability through active replication, coordination and agreement, transactions and concurrency control.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 448",
        "title": "SOEN 448 Management of Evolving Systems",
        "credits": 3,
        "prerequisites": "SOEN 342 , SOEN 343 ",
        "corequisites": "",
        "description": "This course covers the following topics: software maintenance (corrective, perfective, and adaptive); software reuse; construction of reusable software; techniques for reverse engineering and re‑engineering software; software development as “growing” software; long‑term evolution of existing software systems.",
        "components": "Lecture 3 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 471",
        "title": "SOEN 471 Big Data Analytics",
        "credits": 4,
        "prerequisites": "COMP 352 ",
        "corequisites": "",
        "description": "This course focuses on the fundamentals of the big data terminology, concepts and technologies. For the technical aspects of big data management systems, the course focuses on big data engines, programming models and file systems. Specific techniques covered include supervised classification, recommender systems, data clustering, frequent itemsets mining, similarity search, data streams and graph analysis. A project provides extensive hands-on experience.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 487",
        "title": "SOEN 487 Web Services and Applications",
        "credits": 4,
        "prerequisites": "SOEN 387 ",
        "corequisites": "",
        "description": "This course covers the following topics: analysis and design of web services and applications; advanced architectures for the design, deployment, and testing of large multi‑server web services and applications; Service Oriented Architecture (SOA); Electronic Commerce; security; load balancing; stress testing.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN 491",
        "title": "SOEN 491 Software Engineering Project",
        "credits": 1,
        "prerequisites": "",
        "corequisites": "",
        "description": "Theoretical or practical project in an advanced topic in software engineering.",
        "components": "Lecture",
        "notes": ""
    },
    {
        "id": "SOEN 498",
        "title": "SOEN 498 Topics in Software Engineering",
        "credits": 3,
        "prerequisites": "",
        "corequisites": "",
        "description": "This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",
        "components": "Lecture 3 hours per week.",
        "notes": ""
    },
    {
        "id": "SOEN 499",
        "title": "SOEN 499 Topics in Software Engineering with Lab",
        "credits": 4,
        "prerequisites": "",
        "corequisites": "",
        "description": "This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "ENGR 411",
        "title": "ENGR 411 Special Technical Report",
        "credits": 1,
        "prerequisites": "ENCS 282 ",
        "corequisites": "",
        "description": "Students must submit a report on a topic related to the students’ discipline and approved by the Department. The report must present a review of a current engineering problem, a proposal for a design project, or a current engineering practice.",
        "components": "Lecture Notes: Students who have received credit for ENGR 410 may not take this course for credit.",
        "notes": "Students who have received credit for ENGR 410 may not take this course for credit."
    }
]