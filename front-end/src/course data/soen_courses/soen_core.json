[
    {
        "id": "SOEN228",
        "title": "SOEN 228 System Hardware",
        "credits": 4,
        "prerequisites": "MATH 203 or Cegep Mathematics 103, MATH 204 or Cegep Mathematics 105",
        "corequisites": "",
        "description": "This course covers the following topics: Boolean Algebra, Digital logic and the design of logic circuits; CPU design; addressing modes; instruction sets and sequencing; design of datapath and control units; memory systems and types; cache memory levels; I/O devices and their interconnection to the CPU; assembly language, and Interrupts.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week; Laboratory 2 hours per week Notes: Students who have received credit for COMP 228 may not take this course for credit.",
        "notes": "Students who have received credit for COMP 228 may not take this course for credit."
    },
    {
        "id": "SOEN287",
        "title": "SOEN 287 Web Programming",
        "credits": 3,
        "prerequisites": "COMP 248",
        "corequisites": "",
        "description": "This course covers the following topics: internet architecture and protocols; web applications through clients and servers; modern HTML and CSS; client‑side programming using modern JavaScript and an overview of the advantages of some common modern JavaScript libraries; Regular Expressions; static website contents and dynamic page generation through server‑side programming; preserving state (client‑side) in web applications; deploying static and dynamic websites and content management systems vs. website deployment.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN321",
        "title": "SOEN 321 Information Systems Security",
        "credits": 3,
        "prerequisites": "COMP 346 or COEN 346",
        "corequisites": "",
        "description": "This course covers the following topics: introduction to cryptography and cryptanalysis; threats, attacks, and vulnerabilities; security services (confidentiality, authentication, integrity); public key systems including Diffie‑Hellman, RSA, Rabin; Digital Signature Schemes; Hash functions and MAC schemes; authentication protocols; network layers and security; protocols; Public Key Infrastructure (PKI); Transport Layer Security (TLS); firewalls; Intrusion Detection Systems; DNS security; Denial of Service Attacks; Penetration testing; Online Privacy and anonymity; Mix networks and Onion Routing; TOR; Malware; Botnets; Spam and Hot topics in Security and Privacy.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "SOEN331",
        "title": "SOEN 331 Formal Methods for Software Engineering",
        "credits": 3,
        "prerequisites": "COMP 232 , COMP 249",
        "corequisites": "",
        "description": "This course covers the following topics: property‑based (axiomatic and algebraic) formalisms and model‑based (abstract and visual) formalisms; axiomatic formalisms with temporal logic, assertions and contracts; algebraic formalisms through algebraic specifications; abstract formalisms through the Z and Object‑Z specification languages; visual formalisms through automata (finite state machines and extended finite state machines).",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN341",
        "title": "SOEN 341 Software Process and Practices",
        "credits": 4,
        "prerequisites": "",
        "corequisites": "",
        "description": "This course covers the following topics: basic principles of software engineering; introduction to software process, including activities, phases, organization, roles, teamwork, and conflict resolution; notations used in software engineering; software development practices, including documentation, modern version control, review, testing, agile, and continuous integration.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week Notes: Students who have received credit for COMP 354 may not take this course for credit.",
        "notes": "Students who have received credit for COMP 354 may not take this course for credit."
    },
    {
        "id": "SOEN342",
        "title": "SOEN 342 Software Requirements and Deployment",
        "credits": 4,
        "prerequisites": "SOEN 341",
        "corequisites": "",
        "description": "This course covers the following topics: requirements engineering; eliciting and coping with changing and evolving requirements; deployment of a software system under real‑life functional and non‑functional requirements scenarios; understanding how requirements impact early‑stage and deployed software systems through all phases of engineering, including design, implementation, test and verification, deployment, and evolution. A project is required.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN343",
        "title": "SOEN 343 Software Architecture and Design",
        "credits": 4,
        "prerequisites": "SOEN 341 ; SOEN 342",
        "corequisites": "SOEN 341 ; SOEN 342",
        "description": "This course covers the following topics: from requirements to design to implementation; planned vs. evolutionary design and refactoring; model‑driven design and Unified Modelling Language (UML); structural and behavioural design descriptions and specifications; general and domain‑specific design principles, patterns and idioms; introduction to software architecture (styles and view models); design quality; architectural debt; design smells; refactoring Anti‑Patterns to Patterns; design rationale.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN345",
        "title": "SOEN 345 Software Testing, Verification and Quality Assurance",
        "credits": 4,
        "prerequisites": "SOEN 343",
        "corequisites": "SOEN 343",
        "description": "This course covers the following topics: unit testing and test‑driven development; characterization testing and legacy system testing; mocking, dependency injection, and breaking system dependencies; integration and system testing; test planning and management; test order, prioritization, redundancy, and flaky tests; advanced topics including static analysis, bisection, and fuzzing; data migration testing and verification; continuous integration and delivery; DevOps testing and validation including darklaunching, A/B testing, feature toggles, and logging.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN357",
        "title": "SOEN 357 User Interface Design",
        "credits": 3,
        "prerequisites": "SOEN 341 or COMP 354",
        "corequisites": "",
        "description": "This course covers the following topics: principles, standards and guidelines for user interface design; usability principles and user experience; standards and design rationale for user‑centred design; task‑centred design; rationalized design; usability engineering; user models; interface design process, including interface requirement gathering, conceptual design and prototyping, and evaluation; usability testing and analytic evaluation; data gathering and analysis techniques for qualitative and quantitative data; interface design documentation; design approaches for touch, gesture‑based, and haptic interfaces.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "SOEN363",
        "title": "SOEN 363 Data Systems for Software Engineers",
        "credits": 3,
        "prerequisites": "COMP 352",
        "corequisites": "",
        "description": "This course covers the following topics: introduction to the current data ecosystem; relational databases; key‑value databases; document databases; column databases; graph databases; RDF stores; parallel and distributed file systems, data processing engines; data stream analytics; and data infrastructure.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week Notes: Students who have received credit for COMP 353 may not take this course for credit.",
        "notes": "Students who have received credit for COMP 353 may not take this course for credit."
    },
    {
        "id": "SOEN384",
        "title": "SOEN 384 Management, Measurement and Quality Control",
        "credits": 3,
        "prerequisites": "ENCS 282 ; SOEN 341",
        "corequisites": "",
        "description": "Organization of large software development. Roles of team members, leaders, managers, stakeholders, and users. Tools for monitoring and controlling a schedule. Financial, organizational, human, and computational resources allocation and control. Project and quality reviews, inspections, and walkthroughs. Risk management. Communication and collaboration. Cause and effects of project failure. Project management via the Internet. Quality assurance and control.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "id": "SOEN390",
        "title": "SOEN 390 Software Engineering Team Design Project",
        "credits": 3.5,
        "prerequisites": "SOEN 345 and SOEN 357",
        "corequisites": "SOEN 345 and SOEN 357",
        "description": "Students work in teams to design and implement a software project from requirements provided by the coordinator. Each team will demonstrate the software and the testing of the software, and prepare adequate documentation for it. In addition, each team will generate a report based on the process of development.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 3 hours per week",
        "notes": ""
    },
    {
        "id": "SOEN490",
        "title": "SOEN 490 Capstone Software Engineering Design Project",
        "credits": 6,
        "prerequisites": "SOEN 390",
        "corequisites": "",
        "description": "Students work in teams of at least four members to construct a significant software application. The class meets at regular intervals. Team members will give a presentation of their contribution to the project.",
        "components": "Lecture 3 hours per week; Laboratory 2 hours per week",
        "notes": ""
    }
]
