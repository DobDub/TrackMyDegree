[
    {
        "title": "COMP 232 Mathematics for Computer Science",
        "credits": 3,
        "prerequisites": "MATH 203 or Cegep Mathematics 103 or NYA; MATH 204 or Cegep Mathematics 105 or NYC",
        "corequisites": "",
        "description": "Sets. Propositional logic and predicate calculus. Functions and relations. Elements of number theory. Mathematical reasoning. Proof techniques: direct proof, indirect proof, proof by contradiction, proof by induction.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week Notes: Students who have received credit for COMP 238 or COEN 231 may not take this course for credit.",
        "notes": "Students who have received credit for COMP 238 or COEN 231 may not take this course for credit."
    },
    {
        "title": "COMP 248 Object‑Oriented Programming I",
        "credits": 3.5,
        "prerequisites": "MATH 204 or Cegep Mathematics 105 or NYC",
        "corequisites": "MATH 204 or Cegep Mathematics 105 or NYC",
        "description": "Introduction to programming. Basic data types, variables, expressions, assignments, control flow. Classes, objects, methods. Information hiding, public vs. private visibility, data abstraction and encapsulation. References. Arrays.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week; Laboratory 1 hour per week",
        "notes": ""
    },
    {
        "title": "COMP 249 Object‑Oriented Programming II",
        "credits": 3.5,
        "prerequisites": "COMP 248 ; MATH 203 or Cegep Mathematics 103 or NYA",
        "corequisites": "MATH 205 or Cegep Mathematics 203 or NYB",
        "description": "Design of classes. Inheritance. Polymorphism. Static and dynamic binding. Abstract classes. Exception handling. File I/O. Recursion. Interfaces and inner classes. Graphical user interfaces. Generics. Collections and iterators.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week; Laboratory 1 hour per week",
        "notes": ""
    },
    {
        "title": "COMP 335 Introduction to Theoretical Computer Science",
        "credits": 3,
        "prerequisites": "COMP 232 or COEN 231 ; and COMP 249 or COEN 244 ",
        "corequisites": "",
        "description": "This course covers the following topics: finite state automata and regular languages; push ‑ down automata and context ‑ free languages; pumping lemmas; applications to parsing; Turing machines; undecidability and decidability.",
        "components": "Lecture 3 hours per week; Tutorial 2 hours per week",
        "notes": ""
    },
    {
        "title": "COMP 346 Operating Systems",
        "credits": 4,
        "prerequisites": "COMP 228 or SOEN 228 ; COMP 352 ",
        "corequisites": "",
        "description": "Fundamentals of operating system functionalities, design and implementation. Multiprogramming: processes and threads, context switching, queuing models and scheduling. Interprocess communication and synchronization. Principles of concurrency. Synchronization primitives. Deadlock detection and recovery, prevention and avoidance schemes. Memory management. Device management. File systems. Protection models and schemes.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week; Laboratory 2 hours per week Notes: Students who have received credit for COEN 346 may not take this course for credit.",
        "notes": "Students who have received credit for COEN 346 may not take this course for credit."
    },
    {
        "title": "COMP 348 Principles of Programming Languages",
        "credits": 3,
        "prerequisites": "COMP 249 ",
        "corequisites": "COMP 249 ",
        "description": "Survey of programming paradigms: Imperative, functional, and logic programming. Issues in the design and implementation of programming languages. Declaration models: binding, visibility, and scope. Type systems, including static and dynamic typing. Parameter passing mechanisms. Hybrid language design.",
        "components": "Lecture 2 hours per week; Tutorial 1 hour per week",
        "notes": ""
    },
    {
        "title": "COMP 352 Data Structures and Algorithms",
        "credits": 3,
        "prerequisites": "COMP 232 ",
        "corequisites": "",
        "description": "Abstract data types: stacks and queues, trees, priority queues, dictionaries. Data structures: arrays, linked lists, heaps, hash tables, search trees. Design and analysis of algorithms: asymptotic notation, recursive algorithms, searching and sorting, tree traversal, graph algorithms.",
        "components": "Lecture 3 hours per week; Tutorial 1 hour per week Notes: Students who have received credit for COEN 352 may not take this course for credit.",
        "notes": "Students who have received credit for COEN 352 may not take this course for credit."
    }
]